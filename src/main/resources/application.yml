server:
    port: ${PORT:8084}

spring:
    application:
        name: hackaton-pagamentos-app
    datasource:
        driverClassName: org.postgresql.Driver
        url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/db_pagamentos}
        username: ${DATASOURCE_USERNAME:postgres}
        password: ${DATASOURCE_PASSWORD:teste123}
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
            ddl-auto: update  # Use 'update' to automatically update schema (create or update tables)
        properties:
            hibernate:
                jdbc:
                    time_zone: UTC  # Set JDBC time zone to UTC (optional, adjust as needed)
        show-sql: false  # Enable SQL logging (optional, for debugging)
        generate-ddl: false  # Generate DDL from entity models (optional, for schema creation)
        open-in-view: false  # Disable Open Session in View (OSIV) to prevent lazy loading issues

    mvc:
        format:
            date: yyyy-MM-dd
            date-time: yyyy-MM-dd HH:mm:ss
            time: HH:mm:ss

eureka:
    client:
        service-url:
            defatulZone: ${eureka.client.serviceUrl.defaultZone:http://localhost:8761/eureka}
        fetch-registry: true
        register-with-eureka: true

api:
    key: ${API_KEY:http://localhost:8082/api/cartao/consultar/}

openapi:
    service:
        title: hackaton-pagamentos-app-service doc
        version: 1.0.0
        url: http://localhost:8080 #api gateway url
springdoc:
    api-docs:
        path: /hackaton-pagamentos-app/v3/api-docs
    swagger-ui:
        path: /hackaton-pagamentos-app/swagger-ui.html
components:
    securitySchemes:
        bearerAuth:            # arbitrary name for the security scheme
            type: http
            scheme: bearer
            bearerFormat: JWT    # optional, arbitrary value for documentation purposes
# 2) Apply the security globally to all operations
security:
    - bearerAuth: []         # use the same name as above